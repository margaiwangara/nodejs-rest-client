{"version":3,"sources":["store/actions/error.js","store/actions/auth.js","services/api.js","utils/env.js","container/Main/Main.js"],"names":["addError","error","type","ADD_ERROR","removeError","REMOVE_ERROR","setAuthorizationToken","token","setTokenHeader","setCurrentUser","user","SET_CURRENT_USER","removeCurrentUser","REMOVE_CURRENT_USER","set2faCode","code","expiry","SEND_TWO_FACTOR_CODE","logoutUser","dispatch","Promise","resolve","reject","window","localStorage","getItem","removeItem","authUser","page","formValue","history","apiRequest","then","getUserDetails","userResponse","isEmailConfirmed","twoFactorEnable","console","log","send2faCode","expiration","setItem","push","catch","userDetails","message","confirm2faCode","CONFIRM_TWO_FACTOR_CODE","data","forgotPassword","formData","resetPassword","queryData","axios","defaults","headers","common","baseUrl","BASE_URL","method","path","payload","toLowerCase","res","response","Login","React","lazy","Register","TwoFactor","ResetPassword","DefaultLayout","PrivateRoute","PublicRoute","Main","useDispatch","useHistory","useEffect","authToken","email","name","surname","createdAt","profileImage","twoFactorCode","twoFactorCodeExpire","recoveryEmail","exact","component"],"mappings":"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","file":"static/js/12.35c141f2.chunk.js","sourcesContent":["import { ADD_ERROR, REMOVE_ERROR } from '../actionTypes';\r\n\r\nexport const addError = (error) => ({\r\n  type: ADD_ERROR,\r\n  error: { ...error },\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: REMOVE_ERROR,\r\n});\r\n","import {\r\n  SET_CURRENT_USER,\r\n  SEND_TWO_FACTOR_CODE,\r\n  CONFIRM_TWO_FACTOR_CODE,\r\n  REMOVE_CURRENT_USER,\r\n} from '../actionTypes';\r\nimport apiRequest, { setTokenHeader } from '@/services/api';\r\nimport { addError } from './error';\r\n\r\nfunction setAuthorizationToken(token) {\r\n  setTokenHeader(token);\r\n}\r\n\r\nexport const setCurrentUser = (user) => ({\r\n  type: SET_CURRENT_USER,\r\n  user,\r\n});\r\n\r\nexport const removeCurrentUser = () => ({\r\n  type: REMOVE_CURRENT_USER,\r\n});\r\n\r\nexport const set2faCode = (code, expiry) => ({\r\n  type: SEND_TWO_FACTOR_CODE,\r\n  code,\r\n  expiry,\r\n});\r\n\r\nexport const unset2faCode = () => ({\r\n  type: CONFIRM_TWO_FACTOR_CODE,\r\n});\r\n\r\nfunction logoutUser(dispatch) {\r\n  return new Promise((resolve, reject) => {\r\n    if (window.localStorage.getItem('jwt')) {\r\n      // clear localStorage\r\n      window.localStorage.removeItem('jwt');\r\n      dispatch(removeCurrentUser());\r\n      resolve();\r\n    }\r\n  });\r\n}\r\n\r\nfunction authUser(dispatch, page, formValue, history) {\r\n  return new Promise((resolve, reject) => {\r\n    return apiRequest('post', `/api/auth/${page}`, formValue)\r\n      .then(({ token }) => {\r\n        // if register or login // if login ?\r\n        if (page === 'login') {\r\n          // check if email if confirmed\r\n\r\n          setAuthorizationToken(token);\r\n          getUserDetails().then((userResponse) => {\r\n            const { isEmailConfirmed, twoFactorEnable } = userResponse;\r\n            console.log('isEmailConfirmed', isEmailConfirmed);\r\n            console.log('twoFactorEnable', twoFactorEnable);\r\n            if (!isEmailConfirmed) {\r\n              const emailConfirmError = {\r\n                message:\r\n                  'Please confirm your email address to access your account',\r\n              };\r\n\r\n              dispatch(addError(emailConfirmError));\r\n              return;\r\n            }\r\n\r\n            // if 2fa is enabled send 2fa code else set token and redirect to home\r\n            if (twoFactorEnable) {\r\n              send2faCode()\r\n                .then(({ code, expiration }) => {\r\n                  console.log('2faCodeSent. Yayyyy!');\r\n                  dispatch(set2faCode(code, expiration));\r\n\r\n                  // set jwt token in localStorage\r\n                  window.localStorage.setItem('jwt', token);\r\n                  history.push('/two-factor');\r\n                })\r\n                .catch((error) => {\r\n                  console.log('2faCodeError. Nayyyy!', error);\r\n                  history.push('/login');\r\n                });\r\n            } else {\r\n              // set jwt\r\n              window.localStorage.setItem('jwt', token);\r\n              // dispatch user details\r\n              const { ...userDetails } = userResponse;\r\n              dispatch(setCurrentUser(userDetails));\r\n              history.push('/');\r\n            }\r\n          });\r\n        } else if (page === 'register') {\r\n          history.push('/login');\r\n        }\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        dispatch(addError(error));\r\n        reject();\r\n      });\r\n  });\r\n}\r\n\r\nfunction send2faCode() {\r\n  return new Promise((resolve, reject) => {\r\n    return apiRequest('put', '/api/auth/two-factor')\r\n      .then(({ code, expiration }) => {\r\n        // store expiration in localStorage\r\n        // window.localStorage.setItem(\"two_factor_expire\", expiration);\r\n        resolve({ code, expiration });\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nfunction confirm2faCode(code, dispatch) {\r\n  return new Promise((resolve, reject) => {\r\n    return apiRequest('post', '/api/auth/two-factor', { code })\r\n      .then(() => {\r\n        dispatch(unset2faCode());\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        dispatch(addError(error));\r\n        reject();\r\n      });\r\n  });\r\n}\r\n\r\nfunction getUserDetails() {\r\n  return new Promise((resolve, reject) => {\r\n    return apiRequest('get', '/api/auth/account')\r\n      .then(({ data }) => {\r\n        resolve(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        reject();\r\n      });\r\n  });\r\n}\r\n\r\nfunction forgotPassword(formData) {\r\n  return new Promise((resolve, reject) => {\r\n    return apiRequest('post', '/api/auth/forgotpassword', formData)\r\n      .then(() => {\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        console.log('forgotPasswordError', error);\r\n\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nfunction resetPassword(queryData, formData) {\r\n  return new Promise((resolve, reject) => {\r\n    return apiRequest(\r\n      'post',\r\n      `/api/auth/resetpassword?token=${queryData}`,\r\n      formData,\r\n    )\r\n      .then(() => {\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        console.log('resetPasswordError', error);\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport {\r\n  authUser,\r\n  send2faCode,\r\n  confirm2faCode,\r\n  getUserDetails,\r\n  setAuthorizationToken,\r\n  forgotPassword,\r\n  resetPassword,\r\n  logoutUser,\r\n};\r\n","import axios from 'axios';\r\nimport { BASE_URL } from '@/utils/env';\r\n\r\nexport const setTokenHeader = (token) => {\r\n  if (token) axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  else delete axios.defaults.headers.common['Authorization'];\r\n};\r\n\r\nconst baseUrl = process.env.NODE_ENV !== 'development' ? `${BASE_URL}/` : '';\r\n\r\nfunction apiRequest(method, path, payload) {\r\n  return new Promise((resolve, reject) => {\r\n    return axios[method.toLowerCase()](`${baseUrl}${path}`, payload)\r\n      .then((res) => resolve(res.data))\r\n      .catch((error) => reject(error.response.data.error));\r\n  });\r\n}\r\n\r\nexport default apiRequest;\r\n","export const BASE_URL = 'https://nodejsrestapi.margaiwangara.me/';\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory, Switch } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  setAuthorizationToken,\r\n  removeCurrentUser,\r\n  getUserDetails,\r\n  setCurrentUser,\r\n} from '@/store/actions/auth';\r\n\r\nconst Login = React.lazy(() => import('@/views/Auth/Login'));\r\nconst Register = React.lazy(() => import('@/views/Auth/Register'));\r\nconst TwoFactor = React.lazy(() => import('@/views/Auth/TwoFactor'));\r\nconst ResetPassword = React.lazy(() =>\r\n  import('@/views/ForgotPassword/ResetPassword'),\r\n);\r\nconst DefaultLayout = React.lazy(() =>\r\n  import('@/container/DefaultLayout/DefaultLayout'),\r\n);\r\nconst PrivateRoute = React.lazy(() => import('@/components/Auth/PrivateRoute'));\r\nconst PublicRoute = React.lazy(() => import('@/components/Auth/PublicRoute'));\r\n\r\nfunction Main() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const authToken = window.localStorage.getItem('jwt');\r\n    if (authToken) {\r\n      setAuthorizationToken(authToken);\r\n      getUserDetails()\r\n        .then(\r\n          ({\r\n            email,\r\n            name,\r\n            surname,\r\n            createdAt,\r\n            profileImage,\r\n            twoFactorCode,\r\n            twoFactorCodeExpire,\r\n            recoveryEmail,\r\n            twoFactorEnable,\r\n          }) => {\r\n            const userDetails = {\r\n              email,\r\n              name,\r\n              surname,\r\n              createdAt,\r\n              profileImage,\r\n              twoFactorCode,\r\n              twoFactorCodeExpire,\r\n              recoveryEmail,\r\n              twoFactorEnable,\r\n            };\r\n            dispatch(setCurrentUser(userDetails));\r\n          },\r\n        )\r\n        .catch(() => dispatch(removeCurrentUser()));\r\n    } else {\r\n      dispatch(removeCurrentUser());\r\n      history.push('/login');\r\n    }\r\n  }, []);\r\n  return (\r\n    <Switch>\r\n      <PublicRoute\r\n        exact\r\n        path=\"/register\"\r\n        name=\"Register\"\r\n        component={Register}\r\n      />\r\n      <PublicRoute exact path=\"/login\" name=\"Login\" component={Login} />\r\n      <PublicRoute\r\n        exact\r\n        path=\"/reset-password\"\r\n        name=\"Reset Password\"\r\n        component={ResetPassword}\r\n      />\r\n      <PublicRoute\r\n        exact\r\n        path=\"/two-factor\"\r\n        name=\"Two Factor\"\r\n        component={TwoFactor}\r\n      />\r\n      <PrivateRoute path=\"/\" component={DefaultLayout} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"sourceRoot":""}