name: Mtandao Application with React.js
'on':
  push:
    branches: master
jobs:
  build-and-deploy:
    name: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set Node.js Version
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache/Restore node_modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Build project
        run: npm run build --if-present
        env:
          CI: false

      - name: List output files
        run: find build/ -print

      - name: Deploy to ftp server
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: '${{ secrets.FTP_SERVER }}'
          username: '${{ secrets.FTP_USERNAME }}'
          password: '${{ secrets.FTP_PASSWORD }}'
          local-dir: build/
          server-dir: projects/mtandao/client
